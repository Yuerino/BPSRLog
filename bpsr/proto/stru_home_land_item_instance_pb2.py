# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: stru_home_land_item_instance.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'stru_home_land_item_instance.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import stru_item_pb2 as stru__item__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"stru_home_land_item_instance.proto\x12\x06zproto\x1a\x0fstru_item.proto\"\xce\x01\n\x14HomeLandItemInstance\x12\x12\n\nInstanceId\x18\x01 \x01(\x03\x12\x10\n\x08\x43onfigId\x18\x02 \x01(\x05\x12J\n\x0fownerToStackMap\x18\x03 \x03(\x0b\x32\x31.zproto.HomeLandItemInstance.OwnerToStackMapEntry\x1a\x44\n\x14OwnerToStackMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12\x1b\n\x05value\x18\x02 \x01(\x0b\x32\x0c.zproto.Item:\x02\x38\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'stru_home_land_item_instance_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_HOMELANDITEMINSTANCE_OWNERTOSTACKMAPENTRY']._loaded_options = None
  _globals['_HOMELANDITEMINSTANCE_OWNERTOSTACKMAPENTRY']._serialized_options = b'8\001'
  _globals['_HOMELANDITEMINSTANCE']._serialized_start=64
  _globals['_HOMELANDITEMINSTANCE']._serialized_end=270
  _globals['_HOMELANDITEMINSTANCE_OWNERTOSTACKMAPENTRY']._serialized_start=202
  _globals['_HOMELANDITEMINSTANCE_OWNERTOSTACKMAPENTRY']._serialized_end=270
# @@protoc_insertion_point(module_scope)
