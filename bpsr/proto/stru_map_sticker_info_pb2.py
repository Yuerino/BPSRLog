# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: stru_map_sticker_info.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'stru_map_sticker_info.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import stru_map_sticker_task_info_pb2 as stru__map__sticker__task__info__pb2
import stru_dirty_mask_pb2 as stru__dirty__mask__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1bstru_map_sticker_info.proto\x12\x06zproto\x1a stru_map_sticker_task_info.proto\x1a\x15stru_dirty_mask.proto\"\xc1\x01\n\x0eMapStickerInfo\x12:\n\nstickerMap\x18\x01 \x03(\x0b\x32&.zproto.MapStickerInfo.StickerMapEntry\x12\x11\n\tfinishMap\x18\x02 \x03(\r\x12\x11\n\tawardFlag\x18\x03 \x01(\r\x1aM\n\x0fStickerMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12)\n\x05value\x18\x02 \x01(\x0b\x32\x1a.zproto.MapStickerTaskInfo:\x02\x38\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'stru_map_sticker_info_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_MAPSTICKERINFO_STICKERMAPENTRY']._loaded_options = None
  _globals['_MAPSTICKERINFO_STICKERMAPENTRY']._serialized_options = b'8\001'
  _globals['_MAPSTICKERINFO']._serialized_start=97
  _globals['_MAPSTICKERINFO']._serialized_end=290
  _globals['_MAPSTICKERINFO_STICKERMAPENTRY']._serialized_start=213
  _globals['_MAPSTICKERINFO_STICKERMAPENTRY']._serialized_end=290
# @@protoc_insertion_point(module_scope)
