# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: EmoClipsTable.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'EmoClipsTable.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13\x45moClipsTable.proto\x12\x06\x62okura\"U\n\x11\x45moClipsTableBase\x12\x0b\n\x02Id\x18\xb7\x0b \x01(\x05\x12\x11\n\x08SoureKey\x18\xa3\x0b \x01(\t\x12\x0e\n\x05layer\x18\x8b\x08 \x01(\x05\x12\x10\n\x07\x41\x64\x64ress\x18\xdd\x07 \x01(\t\"\x8f\x01\n\x10\x45moClipsTableMgr\x12\x32\n\x05\x64\x61tas\x18\x01 \x03(\x0b\x32#.bokura.EmoClipsTableMgr.DatasEntry\x1aG\n\nDatasEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12(\n\x05value\x18\x02 \x01(\x0b\x32\x19.bokura.EmoClipsTableBase:\x02\x38\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'EmoClipsTable_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_EMOCLIPSTABLEMGR_DATASENTRY']._loaded_options = None
  _globals['_EMOCLIPSTABLEMGR_DATASENTRY']._serialized_options = b'8\001'
  _globals['_EMOCLIPSTABLEBASE']._serialized_start=31
  _globals['_EMOCLIPSTABLEBASE']._serialized_end=116
  _globals['_EMOCLIPSTABLEMGR']._serialized_start=119
  _globals['_EMOCLIPSTABLEMGR']._serialized_end=262
  _globals['_EMOCLIPSTABLEMGR_DATASENTRY']._serialized_start=191
  _globals['_EMOCLIPSTABLEMGR_DATASENTRY']._serialized_end=262
# @@protoc_insertion_point(module_scope)
