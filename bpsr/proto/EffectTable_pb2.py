# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: EffectTable.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'EffectTable.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11\x45\x66\x66\x65\x63tTable.proto\x12\x06\x62okura\"Q\n\x0f\x45\x66\x66\x65\x63tTableBase\x12\x0b\n\x02Id\x18\xb7\x0b \x01(\x05\x12\x0f\n\x07\x43omment\x18\x0b \x01(\t\x12\r\n\x04Path\x18\xac\x01 \x01(\t\x12\x11\n\x08PlayTime\x18\xab\n \x01(\x02\"\x89\x01\n\x0e\x45\x66\x66\x65\x63tTableMgr\x12\x30\n\x05\x64\x61tas\x18\x01 \x03(\x0b\x32!.bokura.EffectTableMgr.DatasEntry\x1a\x45\n\nDatasEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12&\n\x05value\x18\x02 \x01(\x0b\x32\x17.bokura.EffectTableBase:\x02\x38\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'EffectTable_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_EFFECTTABLEMGR_DATASENTRY']._loaded_options = None
  _globals['_EFFECTTABLEMGR_DATASENTRY']._serialized_options = b'8\001'
  _globals['_EFFECTTABLEBASE']._serialized_start=29
  _globals['_EFFECTTABLEBASE']._serialized_end=110
  _globals['_EFFECTTABLEMGR']._serialized_start=113
  _globals['_EFFECTTABLEMGR']._serialized_end=250
  _globals['_EFFECTTABLEMGR_DATASENTRY']._serialized_start=181
  _globals['_EFFECTTABLEMGR_DATASENTRY']._serialized_end=250
# @@protoc_insertion_point(module_scope)
